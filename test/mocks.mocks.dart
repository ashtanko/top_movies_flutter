// Mocks generated by Mockito 5.1.0 from annotations
// in top_movies_flutter/test/mocks.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:top_movies_flutter/data/datasource/remote_data_source.dart'
    as _i5;
import 'package:top_movies_flutter/data/models/movie_model.dart' as _i6;
import 'package:top_movies_flutter/domain/entity/movie.dart' as _i4;
import 'package:top_movies_flutter/domain/repository/movie_list_repository.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [MovieListRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieListRepository extends _i1.Mock
    implements _i2.MovieListRepository {
  MockMovieListRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Movie>> getMovies() =>
      (super.noSuchMethod(Invocation.method(#getMovies, []),
              returnValue: Future<List<_i4.Movie>>.value(<_i4.Movie>[]))
          as _i3.Future<List<_i4.Movie>>);
}

/// A class which mocks [RemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteDataSource extends _i1.Mock implements _i5.RemoteDataSource {
  MockRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i6.MovieModel>> getMovies() => (super.noSuchMethod(
          Invocation.method(#getMovies, []),
          returnValue: Future<List<_i6.MovieModel>>.value(<_i6.MovieModel>[]))
      as _i3.Future<List<_i6.MovieModel>>);
}
